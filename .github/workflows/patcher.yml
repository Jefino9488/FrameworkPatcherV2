name: Framework Patcher

on:
  workflow_dispatch:
    inputs:
      api_level:
        description: 'Android API level'
        required: true
        default: '35'
        type: string
      device_name:
        description: 'Device codename (e.g. rothko)'
        required: true
        type: string
      version_name:
        description: 'MIUI/ROM version (e.g. OS2.0.200.33)'
        required: true
        type: string
      framework_url:
        description: 'URL to framework.jar'
        required: true
        default: 'https://dumps.tadiphone.dev/dumps/redmi/rothko/-/raw/missi-user-15-AP3A.240617.008-OS2.0.200.33.VNNCNXM-release-keys/system/system/framework/framework.jar'
        type: string
      services_url:
        description: 'URL to services.jar'
        required: true
        default: 'https://dumps.tadiphone.dev/dumps/redmi/rothko/-/raw/missi-user-15-AP3A.240617.008-OS2.0.200.33.VNNCNXM-release-keys/system/system/framework/services.jar'
        type: string
      miui_services_url:
        description: 'URL to miui-services.jar'
        required: true
        default: 'https://dumps.tadiphone.dev/dumps/redmi/rothko/-/raw/missi-user-15-AP3A.240617.008-OS2.0.200.33.VNNCNXM-release-keys/system_ext/framework/miui-services.jar'
        type: string

jobs:
  patch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup environment
        run: |
          mkdir -p {framework,services,miui_services,tools}_decompile

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y p7zip-full android-sdk-build-tools zipalign
          # Fallback if package not found
          if ! command -v zipalign &> /dev/null; then
            sudo apt-get install -y android-tools-zipalign
          fi

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Download tools
        run: |
          mkdir -p tools
          wget -O tools/baksmali.jar https://github.com/baksmali/smali/releases/download/3.0.9/baksmali-3.0.9-fat.jar
          wget -O tools/smali.jar https://github.com/baksmali/smali/releases/download/3.0.9/smali-3.0.9-fat.jar
          chmod +x tools/*.jar

      - name: Download framework JARs
        run: |
          wget -O framework.jar "${{ github.event.inputs.framework_url }}"
          wget -O services.jar "${{ github.event.inputs.services_url }}"
          wget -O miui-services.jar "${{ github.event.inputs.miui_services_url }}"

      - name: Patch JARs and Create Module
        run: |
          chmod +x scripts/github_patcher.sh
          ./scripts/github_patcher.sh \
            ${{ github.event.inputs.api_level }} \
            "${{ github.event.inputs.device_name }}" \
            "${{ github.event.inputs.version_name }}" \
            --framework --services --miui-services

      - name: Set Release Info
        id: release_info
        run: |
          # Format version name to be git tag friendly (replace spaces and dots with hyphens)
          SAFE_VERSION=$(echo "${{ github.event.inputs.version_name }}" | sed 's/[. ]/-/g')
          RELEASE_TAG="${{ github.event.inputs.device_name }}_${SAFE_VERSION}"
          echo "tag=${RELEASE_TAG}" >> $GITHUB_OUTPUT
          echo "name=Framework Patch for ${{ github.event.inputs.device_name }} (${{ github.event.inputs.version_name }})" >> $GITHUB_OUTPUT

      - name: Find Module ZIP
        id: find_zip
        run: |
          ZIP_FILE=$(ls Framework-Patcher-${{ github.event.inputs.device_name }}*.zip)
          echo "file_path=${ZIP_FILE}" >> $GITHUB_OUTPUT

      - name: Delete Existing Release
        uses: actions/github-script@v6
        continue-on-error: true
        with:
          script: |
            try {
              const releases = await github.rest.repos.listReleases({
                owner: context.repo.owner,
                repo: context.repo.repo
              });

              const existingRelease = releases.data.find(r => r.tag_name === '${{ steps.release_info.outputs.tag }}');

              if (existingRelease) {
                console.log('Found existing release, deleting...');
                await github.rest.repos.deleteRelease({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  release_id: existingRelease.id
                });

                // Delete the tag
                try {
                  await github.rest.git.deleteRef({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    ref: 'tags/${{ steps.release_info.outputs.tag }}'
                  });
                } catch (e) {
                  console.log('Tag might not exist, continuing...');
                }
              }
            } catch (e) {
              console.log('No existing release found or error occurred:', e.message);
            }

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_info.outputs.tag }}
          name: ${{ steps.release_info.outputs.name }}
          files: ${{ steps.find_zip.outputs.file_path }}
          body: |
            Framework Patcher for ${{ github.event.inputs.device_name }}
            Version: ${{ github.event.inputs.version_name }}
            Android API: ${{ github.event.inputs.api_level }}

            Sources:
            - Framework: ${{ github.event.inputs.framework_url }}
            - Services: ${{ github.event.inputs.services_url }}
            - MIUI Services: ${{ github.event.inputs.miui_services_url }}

            Build date: $(date +'%Y-%m-%d')
