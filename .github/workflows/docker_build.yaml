name: Build & Deploy Bot to Cloud Run

on:
  push:
    branches:
      - master # Or your main branch like 'main'
    paths:
      - 'bot/**' # Trigger when files in the 'bot' directory change
      - 'Dockerfile' # Also trigger if Dockerfile itself changes
  workflow_dispatch:

env:
  PROJECT_ID: frameworkpatcher
  REGION: asia-south1
  GITHUB_OWNER: Jefino9488 #
  GITHUB_REPO: FrameworkPatcherV2 #
  GITHUB_WORKFLOW_ID: patcher.yml #


jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Required to push to GitHub Packages (GHCR)
      id-token: write # Required for Workload Identity Federation

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set lowercase repository name
        run: echo "REPO_LOWER=$(echo "$GITHUB_REPOSITORY" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image to GHCR
        id: build-image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ env.REPO_LOWER }}/framework-patcher-bot:latest

      - name: Google Auth (for Cloud Run deployment)
        id: auth_gcp
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/292738675226/locations/global/workloadIdentityPools/github-actions-pool/providers/github-provider
          service_account: github-actions-builder@frameworkpatcher.iam.gserviceaccount.com

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: framework-patcher-bot
          region: asia-south1
          image: gcr.io/${{ env.PROJECT_ID }}/framework-patcher-bot
          env_vars: |
            BOT_TOKEN=${{ secrets.BOT_TOKEN }}
            PIXELDRAIN_API_KEY=${{ secrets.PIXELDRAIN_API_KEY }}
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
            GITHUB_OWNER=Jefino9488
            GITHUB_REPO=FrameworkPatcherV2
            GITHUB_WORKFLOW_ID=patcher.yml
            API_ID=${{ secrets.API_ID }}
            API_HASH=${{ secrets.API_HASH }}
            OWNER_ID=${{ secrets.OWNER_ID }}
          labels: |
            managed-by=github-actions
            commit-sha=${{ github.sha }}
          allow_unauthenticated: true
          min_instances: 1